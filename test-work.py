# Домашнее задание №2
#
#  2.8. Дано трехзначное число. Найти:
# а) число единиц в нем;
# б) число десятков в нем;
# в) сумму его цифр;
# г) произведение его цифр.

num = int(input('Введите трёхзначное число: '))
hundred = num // 100
tens = num % 100 // 10
digit = num % 10
sum = hundred + tens + digit
mult_num = hundred * tens * digit
print(f'В числе {num} находится {digit} единиц, {tens} десятка \nСумма чисел {num} равна {sum} \nПроизведение чисел {num} равно {mult_num}')


# 2.9. Дано трехзначное число. Найти число, полученное при прочтении  его цифр справа налево.

numb = int(input('Введите трёхзначное число: '))
#  123 -> 321
hundred = numb // 100 # сотни
tens = numb % 100 // 10 # десятки
digit = numb % 10 # еденицы
new_num = digit * 100 + tens * 10 + hundred
print(f'Обратное прочтение числа {numb} будет {new_num}.')

#2.10. Дано трехзначное число. В нем зачеркнули первую слева цифру и приписали ее в конце. Найти полученное число.

num = int(input('Введите трёхзначное число: '))
# # 123 -> 231
hundred = num // 100 # сотни
tens = num % 100 // 10 # десятки
digit = num % 10 # еденицы
new_num = (tens * 100) + (digit * 10) + hundred
print(f'Ответ на задачу 2.10: {new_num}')

# 2.11. Дано трехзначное число. В нем зачеркнули последнюю справа цифру и приписали ее в начале. Найти полученное число.

num = int(input('Введите трёхзначное число: '))
#  123 -> 312
hundred = num // 100 # 1
tens = num % 100 // 10 # 2
digit = num % 10 # 3
new_num = (digit * 100) + (hundred * 10) + tens
print(f'Ответ на задачу 2.11: {new_num}')

# 2.12. Дано трехзначное число. Найти число, полученное при перестановке первой и второй цифр заданного числа.

num = int(input('Введите трёхзначное число: '))
#  123 -> 213
hundred = num // 100 # 1
tens = num % 100 //10 # 2
digit = num % 10 # 3
new_num = (tens * 100) + (hundred * 10) + digit
print(f'Ответ на задачу 2.12: {new_num}.')

# 2.13. Дано трехзначное число. Найти число, полученное при перестановке второй и третьей цифр заданного числа.

num = int(input('Введите трёхзначное число: '))
#  123 -> 132
hundred = num // 100 # 1
tens = num % 100 //10 # 2
digit = num % 10 # 3
new_num = (hundred * 100) + (digit * 10) + tens
print(f'Ответ на задачу 2.13: {new_num}.')

# 2.14. Дано трехзначное число, в котором все цифры различны.
# Получить шесть чисел, образованных при перестановке цифр заданного числа.

num = int(input('Введите трёхзначное число: '))
#  123 -> 132, 231, 213, 321, 312
hundred = num // 100 # 1
tens = num % 100 // 10 # 2
digit = num % 10 # 3
new_digit_1 = (hundred * 100) + (digit * 10) + tens # 132
new_digit_2 = (tens * 100) + (digit * 10) + hundred # 231
new_digit_3 = (tens * 100) + (hundred * 10) + digit # 213
new_digit_4 = (digit * 100) + (tens * 10) + hundred # 321
new_digit_5 = (digit * 100) + (hundred * 10) + tens# 312
print(f'Все комбинации цифр в числе {num}, будет:\nКомбинация №1: {num}\nКомбинация №2: {new_digit_1}\nКомбинация №3: {new_digit_2}\n'
      f'Комбинация №4: {new_digit_3}\nКомбинация №5: {new_digit_4}\nКомбинация №6: {new_digit_5}')

# 2.15. Дано четырехзначное число. Найти:
# а) сумму его цифр;
# б) произведение его цифр.

num = int(input('Введите четырёхзначное число: '))
# 1234 -> 1+2+3+4
# 1234 -> 1*2*3*4
thousands = num // 1000
hundred = num % 1000 // 100
tens = num % 100 // 10
digit = num % 10
sum_num = thousands + hundred + tens + digit
multi_num = thousands * hundred * tens * digit
print(f'Сумма цифр числа {num} равна: {sum_num}\nПроизведение цифр числа {num} равно: {multi_num}.')

# 2.16. Дано четырехзначное число. Найти:
# а) число, полученное при прочтении его цифр справа налево;
# б) число, образуемое при перестановке первой и второй, третьей
#      и четвертой цифр заданного числа. Например, из числа 5434 получить
#      4543, из числа 7048— 784;
# в) число, образуемое при перестановке второй и третьей цифр
#      заданного числа. Например, из числа 5084 получить 5804;
# г) число, образуемое при перестановке двух первых и двух
#      последних цифр заданного числа. Например, из числа 4566 получить
# 6645, из числа 7304 — 473.


num = int(input('Введите четырёхзначное число: '))
#  a) 1234 -> 4321
thousands = num // 1000 # 1
hundred = num % 1000 // 100 # 2
tens = num % 100 // 10 # 3
digit = num % 10 # 4
rever_num = (digit * 1000) + (tens * 100) + (hundred * 10) + thousands

combi_num_1 = (hundred * 1000) + (thousands * 100) + (digit * 10) + tens

combi_num_2 = (thousands * 1000) + (tens * 100) + (hundred * 10) + digit

combi_num_3 = (tens * 1000) + (digit * 100) + (thousands * 10) + hundred
print(f'а) Прочтение цифр числа {num} справа налево: {rever_num}.\n'
      f'б) Число, образуемое при перестановке первой и второй, третьей и четвертой цифр числа {num}: {combi_num_1}\n'
      f'в) Число, образуемое при перестановке второй и третьей цифр заданного числа {num}: {combi_num_2}\n'
      f'г) число, образуемое при перестановке двух первых и двух последних цифр заданного числа {num}: {combi_num_3}')

# Решить задачу двумя способами:
# 1) с выделением отдельных цифр заданного числа;
# 2) без выделения отдельных цифр заданного числа.

# 2.17. Дано натуральное число n (n > 9). Найти:
#   а) число единиц в нем;
#   б) число десятков в нем.

num = int(input('Введите натуральное число, где n > 9: '))
#  n > 9
digit = num % 10
tens = num // 10
print(f'а) Число единиц в числе {num}: {digit}\nб) Число десятков в числе {num}: {tens}')

# 2.18. Дано натуральное число n (n > 99). Найти:
#   а) число десятков в нем;
#   б) число сотен в нем.

num = int(input('Введите натуральное число, где n > 99: '))
# n > 99
tens = num % 100 // 10
hundred = num // 100
print(f'а) число десятков в {num}: {tens}\nб) число сотен в {num}: {hundred}.')

# 2.19. Дано натуральное число n (n > 999). Найти:
#   а) число сотен в нем;
#   б) число тысяч в нем.

num = int(input('Введите натуральное число, где n > 999: '))
# n > 999
hundred = num % 1000 // 100
thousands = num // 1000
print(f'a) число сотен в {num}: {hundred}\nб) число тысяч в {num}: {thousands}')